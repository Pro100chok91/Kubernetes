name: Check Kubernetes Pod Status

on: [push , workflow_dispatch]

jobs:
 check-pod-status:
  runs-on: ubuntu-latest
  steps:
    - uses: actions/checkout@v2
    - name: connect via proxy and execute commands
      id: connect
      uses: appleboy/ssh-action@v1.1.0
      with:
        proxy_host: ${{ secrets.PROXY_IP }}
        proxy_port: ${{ secrets.PROXY_PORT }}
        proxy_username: ${{ secrets.PROXY_USER }}
        proxy_password: ${{ secrets.PROXY_PASS }}
        host: ${{ secrets.CLUSTER_IP }}
        port: ${{ secrets.CLUSTER_PORT }}
        username: ${{ secrets.CLUSTER_USER }}
        password: ${{ secrets.CLUSTER_PASS }}
        script: |
         kubectl get pods -A > output.log
         bad="$(kubectl get pods -A | awk 'NR!=1 {print $4}' | grep -v 'Running' | wc -l)"
         echo $bad > bad.log

 check:
    needs: check-pod-status
    name: Check result
    runs-on: ubuntu-latest
    outputs:
      bads: ${{ steps.check.outputs.FAILED }}
    steps:
      - name: Check out repository
        uses: actions/checkout@master

      - name: Download file via SSH
        uses: nicklasfrahm/scp-action@main
        with:
          direction: download
          host:  ${{ secrets.CLUSTER_IP }}
          port: ${{ secrets.CLUSTER_PORT }}
          username: ${{ secrets.CLUSTER_USER }}
          insecure_password: ${{ secrets.CLUSTER_PASS }}
          insecure_ignore_fingerprint: true
          proxy_host: ${{ secrets.PROXY_IP }}
          proxy_port: ${{ secrets.PROXY_PORT }}
          proxy_fingerprint: true
          proxy_username: ${{ secrets.PROXY_USER }}
          insecure_proxy_password: ${{ secrets.PROXY_PASS }}
          insecure_proxy_ignore_fingerprint: true
          source: "/root/bad.log"
          target: "./bad.log"
      - name: Check file
        id: check
        run: |
          bad=$(cat "./bad.log")
          if [[ $bad -eq 0 ]]
          then
            echo "FAILED=FALSE" >> $GITHUB_OUTPUT
          else
            echo "FAILED=TRUE" >> $GITHUB_OUTPUT
          fi

 notification:
    needs: check
    runs-on: ubuntu-latest
    if: needs.check.outputs.bads == 'TRUE'
    steps:
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: project
        SLACK_COLOR: ${{ job.status }}
        SLACK_MESSAGE: "Cluster has bad pod"
        SLACK_TITLE: K8s status
        SLACK_USERNAME: GitHub
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
